{
  "jupyter.lab.setting-icon-label": "Code Gathering Tools",
  "title": "Gather",
  "description": "Settings for \"nbgather\" plugin.",
  "properties": {
    "loggingEnabled": {
      "title": "Share Interaction Logging Data",
      "description": "Whether to report interaction logging data. If this is set to true, interaction telemetry data from your notebook will be uploaded to a research server. Log data does not include any of your code or data, though it does include summary data about your notebook (e.g., the number of cells and their execution counts). Should be off by default.",
      "type": ["boolean"],
      "default": false
    },
    "loggingId": {
      "title": "Unique Logging ID",
      "description": "Only used if you set 'Share Interaction Logging Data' to true. Then this ID is associated with all events logged from your notebook, so that all of events from the same user can be associated together.",
      "type": ["string", "null"],
      "default": null
    },
    "analysis": {
      "title": "Analysis options",
      "description": "Rules for fine-tuning data-flow analysis. This is most useful for making gather more precise for external APIs. To define specs for how analyze external APIs, define the \"analysis.symbolTable.moduleMap\" property, following instructions at https://github.com/andrewhead/python-program-analysis#api-specs",
      "type": "object",
      "properties": {
        "symbolTable": {
          "description": "Options for initializing the symbol table.",
          "properties": {
            "loadDefaultModuleMap": {
              "description": "Whether to load the default module map for the dataflow analyzer. Includes functions from\ncommon data analysis modules like 'matplotlib' and 'pandas'.",
              "type": "boolean"
            },
            "moduleMap": {
              "$ref": "#/definitions/JsonSpecs",
              "description": "Extend the module map with this variable if you want to specify rules for the how functions\nfrom certain modules affect their arguments, to help the slicer be more precise. If\n'loadDefaultModuleMap' is true, then this module map will be merged with the default module\nmap using the lodash 'merge' function."
            }
          },
          "type": "object"
        }
      },
      "additionalProperties": false,
      "default": {
        "symbolTable": {
          "loadDefaultModuleMap": true,
          "moduleMap": {}
        }
      }
    }
  },
  "additionalProperties": false,
  "definitions": {
    "JsonSpecs": {
      "additionalProperties": {
        "$ref": "#/definitions/ModuleSpec"
      },
      "type": "object"
    },
    "ModuleMap": {
      "additionalProperties": {
        "$ref": "#/definitions/ModuleSpec"
      },
      "type": "object"
    },
    "ModuleSpec": {
      "properties": {
        "functions": {
          "items": {
            "$ref": "#/definitions/FunctionDescriptor"
          },
          "type": "array"
        },
        "methods": {
          "items": {
            "$ref": "#/definitions/FunctionDescriptor"
          },
          "type": "array"
        },
        "modules": {
          "$ref": "#/definitions/ModuleMap"
        },
        "types": {
          "additionalProperties": {
            "$ref": "#/definitions/TypeSpec"
          },
          "type": "object"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "FunctionDescriptor": {
      "anyOf": [{ "type": "string" }, { "$ref": "#/definitions/FunctionSpec" }]
    },
    "FunctionSpec": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "updates": {
          "items": {
            "$ref": "#/definitions/UpdateArgument"
          },
          "type": "array"
        },
        "reads": {
          "items": {
            "type": "string"
          }
        },
        "returns": {
          "type": "string"
        },
        "returnsType": {
          "$ref": "#/definitions/TypeSpec"
        },
        "higherorder": {
          "type": "integer"
        }
      },
      "required": ["name"],
      "additionalProperties": false
    },
    "UpdateArgument": {
      "type": ["string", "number"]
    },
    "TypeSpec": {
      "properties": {
        "methods": {
          "items": {
            "$ref": "#/definitions/FunctionDescriptor"
          },
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    }
  },
  "type": "object"
}
